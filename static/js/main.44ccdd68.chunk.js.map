{"version":3,"sources":["components/MovieItem.jsx","components/MovieTabs.jsx","components/MoviePages.jsx","components/MovieWillWatchItem.jsx","components/App.jsx","utils/api.js","index.js"],"names":["MovieItem","props","state","willWatch","this","movie","removeMovie","addMovieToWillWatch","removeMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","type","onClick","setState","React","Component","MovieTabs","sort_by","updateSortBy","handleClick","updateCurrPage","value","getClassLink","console","log","MoviePages","currentPage","MovieWillWatchItem","movieTitle","movieRating","App","updateMovies","movies","filter","item","id","updateMoviesToWillWatch","moviesWillWatch","updatemoviesWillWatch","page","getMovies","prevProps","prevState","fetch","then","response","json","data","results","map","key","find","x","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44ccdd68.chunk.js","sourcesContent":["import React from \"react\"\n\nclass MovieItem extends React.Component {\n  constructor(props) {\n    super();\n    //const { id, moviesWillWatchIDs } = this.props;\n    this.state = {\n      willWatch: props.willWatch //moviesWillWatchIDs.includes(id) ? true : false\n    };\n  }\n\n  render(){\n    const { movie, removeMovie, addMovieToWillWatch, removeMovieFromWillWatch } = this.props;\n    return (\n     <div className=\"card\">\n      <img\n       className=\"card-img-top\"\n       src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path ||\n             movie.poster_path}`}\n       alt=\"\"\n      />\n      <div className=\"card-body\">\n        <h6 className=\"card-title\">{movie.title}</h6>\n        <div className=\"d-flex justify-content-between align-items-center\">\n           <p className=\"mb-0\">Rating: {movie.vote_average}</p>\n           {this.state.willWatch ? (\n             <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={() => {\n                  this.setState({\n                    willWatch: false\n                  })\n                  removeMovieFromWillWatch(movie);\n                }}\n             >\n              Remove Will Watch\n             </button>\n           ) : (\n             <button\n               type=\"button\"\n               className=\"btn btn-secondary\"\n               onClick={() => {\n                this.setState({\n                  willWatch: true\n                })\n                addMovieToWillWatch(movie);\n               }}\n             >\n               Add Will Watch\n             </button>\n           )}\n        </div>\n          <button type=\"button\"\n            onClick = { () => {\n              removeMovieFromWillWatch(movie);\n              removeMovie(movie);\n\n            }}\n          >\n            Delete movie\n          </button>\n      </div>\n     </div>\n   )\n  }\n}\n\n\n\nexport default MovieItem;\n","import React from \"react\"\n// import ReactDOM from \"react-dom\"\n\nclass MovieTabs extends React.Component{\n  constructor() {\n    super();\n  }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log(\"WillReceiveProps\");\n  //   console.log(\"nextProps sort_by: \", nextProps.sort_by);\n  //   console.log(\"nextState sort_by: \", this.props.sort_by);\n  //\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if(nextProps.sort_by !== this.props.sort_by){\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  render() {\n    const { sort_by, updateSortBy, updateCurrPage } = this.props\n\n    const handleClick = value => () => value !== sort_by ? updateSortBy(value) : () => {return};\n\n    const getClassLink = value => {\n      console.log(\"change!\");\n      return `nav-link ${ sort_by === value ? \"active\" : \"\" }`\n    };\n\n\n    console.log(\"MovieTabs render!\");\n\n    return (\n      <ul className=\"tabs nav nav-pills\">\n        <li>\n          <div className=\"nav-item\">\n            <div\n              className = { getClassLink(\"popularity.desc\") }\n              onClick = { handleClick(\"popularity.desc\") }\n            >\n              Popularity desc\n            </div>\n          </div>\n        </li>\n        <li>\n          <div className=\"nav-item\">\n            <div\n              className={ getClassLink(\"revenue.desc\") }\n              onClick={ handleClick(\"revenue.desc\") }\n            >\n              Revenue desc\n            </div>\n          </div>\n        </li>\n        <li>\n          <div className=\"nav-item\">\n            <div\n              className={ getClassLink(\"vote_average.desc\") }\n              onClick={ handleClick(\"vote_average.desc\") }\n            >\n              Vote average desc\n            </div>\n          </div>\n        </li>\n      </ul>\n    )\n  }\n}\n\nexport default MovieTabs\n","import React from \"react\"\n\nclass MoviePages extends React.Component{\n  constructor() {\n    super();\n\n  }\n\n  render() {\n    const { currentPage, updateCurrPage } = this.props\n    const getClass = value => {\n      return `nav-link ${ value > 1 ? \"active\" : \"disabled\"}`\n    }\n    // let testi = \"qweqwe\";\n    return (\n      <ul className=\"tabs nav nav-pills\">\n        <li>\n          <div className=\"nav-item\">\n            <div\n              className = {getClass(currentPage)}\n\n              onClick = {() => {\n                if(currentPage > 1){\n                  updateCurrPage(currentPage - 1);\n                } else {\n                  console.log(\"First page!\");\n                }\n              }}\n            >\n              Prev\n            </div>\n          </div>\n        </li>\n        <li>\n          <div className=\"nav-item\">\n            <div className=\"nav-link disabled\">\n              Page #{currentPage}\n            </div>\n          </div>\n        </li>\n        <li>\n          <div className=\"nav-item\">\n            <div\n              className=\"nav-link active\"\n              onClick={() => {\n                updateCurrPage(currentPage + 1)\n              }}\n            >\n              Next\n            </div>\n          </div>\n        </li>\n      </ul>\n    )\n  }\n}\n\nexport default MoviePages\n","import React from \"react\"\n\nclass MovieWillWatchItem extends React.Component {\n  constructor () {\n    super();\n  }\n\n  render() {\n\n    const {movieTitle, movieRating} = this.props;\n\n    return(\n      <div className=\"d-flex justify-content-between\">\n        <div>\n          {movieTitle}\n        </div>\n        <div>\n          {movieRating}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MovieWillWatchItem\n","import React from 'react';\n// import { moviesData } from \"../moviesData\"\nimport MovieItem from \"./MovieItem\"\nimport { API_URL, API_KEY_3 } from \"../utils/api\"\nimport MovieTabs from \"./MovieTabs\"\nimport MoviePages from \"./MoviePages\"\nimport MovieWillWatchItem from \"./MovieWillWatchItem\"\n// console.log(moviesData);\n\n//UI = f(state, props)\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      movies: [],\n      moviesWillWatch: [],\n      sort_by: \"popularity.desc\",\n      page: 1\n      // titles: moviesData.map(a => a.title)\n\n    };\n    console.log(\"APP constuctor\");\n  }\n\n  componentDidMount() {\n    console.log(\"App didMount\");\n\n    this.getMovies();\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    console.log(\"App didUpdate\")\n    // console.log(\"prev: \", prevProps, prevState);\n    // console.log(\"this: \", this.props, this.state);\n\n    if (\n      prevState.sort_by !== this.state.sort_by ||\n      prevState.page !== this.state.page\n    ) {\n      console.log(\"Call API\");\n\n      this.getMovies();\n    }\n  }\n\n  getMovies() {\n    fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.page}`).then((response) => {\n    //  console.log(\"response: \");\n      return response.json()\n    }).then((data) => {\n    //  console.log(\"data: \", data);\n      this.setState({\n        movies: data.results\n      })\n    });\n  }\n\n  removeMovie = movie => {\n    const updateMovies = this.state.movies.filter(item => item.id !== movie.id);\n    console.log(updateMovies);\n    // this.state.movies = updateMovies\n\n    this.setState({\n      movies: updateMovies\n    })\n  }\n\n  addMovieToWillWatch = movie => {\n    // console.log(movie)\n\n    // const updateMoviesToWillWatch = [...this.state.moviesWillWatch];\n    // updateMoviesToWillWatch.push(movie);\n\n    const updateMoviesToWillWatch = [...this.state.moviesWillWatch, movie];\n    // updateMoviesToWillWatch.push(movie);\n\n    this.setState({\n      moviesWillWatch: updateMoviesToWillWatch\n    });\n\n  };\n\n\n\n  removeMovieFromWillWatch = movie => {\n    const updatemoviesWillWatch = this.state.moviesWillWatch.filter(function(item) {\n      return item.id !== movie.id;\n    })\n    // console.log(updateMovies);\n    // this.state.movies = updateMovies\n    this.setState({\n      moviesWillWatch: updatemoviesWillWatch\n    })\n  }\n\n  updateSortBy = value => {\n\n    this.setState({\n      sort_by: value\n    })\n    // this.componentDidMount();\n  }\n\n  updateCurrPage = value => {\n    this.setState({\n      page: value\n    })\n  }\n\n\n\n  render() {\n  //console.log(\"App render\", this.state.sort_by);\n  // console.log(this.state.moviesWillWatch.map(value => {\n  //   return value.id;\n  // }));\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          <div className=\"col-9\">\n            <div className=\"row mb-4\">\n              <div className=\"col-12\">\n                <MovieTabs\n                  sort_by={this.state.sort_by}\n                  updateSortBy={this.updateSortBy}\n                  updateCurrPage={this.updateCurrPage}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-4\">\n              <div className=\"col-12\">\n                <MoviePages\n                  currentPage={this.state.page}\n                  updateCurrPage={this.updateCurrPage}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n\n            { this.state.movies.map(movie => {\n              return (\n                <div className=\"col-6 mb-4\" key={movie.id}>\n                    <MovieItem\n                      key={movie.id}\n                      willWatch={this.state.moviesWillWatch.find(\n                        x => x.id === movie.id\n                      )}\n                      movie={movie}\n                      removeMovie={this.removeMovie}\n                      addMovieToWillWatch={this.addMovieToWillWatch}\n                      removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n                    />\n                </div>\n              );\n            })}\n            </div>\n\n          </div>\n          <div className=\"col-3\">\n            <p>Will watch: {this.state.moviesWillWatch.length}</p>\n            <ul className=\"list-group\">\n            {\n              this.state.moviesWillWatch.map(movie => {\n                return (\n                  <li className=\"list-group-item\">\n                    <MovieWillWatchItem\n                      key= {movie.id}\n                      movieTitle= {movie.title}\n                      movieRating= {movie.vote_average}\n                    />\n                  </li>\n\n                );\n              })\n            }\n          </ul>\n          </div>\n        </div>\n      </div>\n    )\n     // return <div>{[<p>1</p>,<p>2</p>,<p>3</p>]}</div>\n  }\n}\n\n//moviesWillWatchIDs={this.state.moviesWillWatch.map(value => {\n//  return value.id;\n//})}\n// function App() {\n//   return <div className=\"title\" id=\"323\" >{moviesData[0].title}</div>\n// }\n\nexport default App;\n","export const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"10583ae2a082debca788c1b540672590\";\n\nexport const API_KEY_4 = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMDU4M2FlMmEwODJkZWJjYTc4OGMxYjU0MDY3MjU5MCIsInN1YiI6IjVlOTBhZDA5ZDM1ZGVhMDAxODc1Y2EwNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.e-CtgcgJ3swsScxuvD1hpSCsw9ZApiSC8Q23bidmaQc\";\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render( <App />, document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}